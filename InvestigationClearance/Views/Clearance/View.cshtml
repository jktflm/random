@model InvestigationClearance.Models.UpdateClearanceViewModel


@{
}

<h2>Edit Clearance</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Table</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.BranchName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    var clearanceBranchOptions = new[]
                    {
            new SelectListItem { Value = "1", Text = "Bulacan" },
            new SelectListItem { Value = "2", Text = "Makati" },
            new SelectListItem { Value = "3", Text = "Manila" },
            new SelectListItem { Value = "4", Text = "Taguig" },
            new SelectListItem { Value = "5", Text = "Quezon City" }
 
                };
                }

                @Html.DropDownListFor(model => model.BranchName,
            new SelectList(clearanceBranchOptions, "Value", "Text"),
            "-- Select Clearance Branch --",
            new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BranchName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Date, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdPresented, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    var ValidIDOptions = new[]
                    {
            new SelectListItem { Value = "1", Text = "Valid Passport" },
            new SelectListItem { Value = "2", Text = "Voter's ID" },
            new SelectListItem { Value = "3", Text = "Driver's ID" },
            new SelectListItem { Value = "4", Text = "PRC License" },
            new SelectListItem { Value = "5", Text = "SSS ID" },
            new SelectListItem { Value = "5", Text = "GSIS ID" },
            new SelectListItem { Value = "5", Text = "Postal ID" },
            new SelectListItem { Value = "5", Text = "School ID" },
            new SelectListItem { Value = "5", Text = "TIN ID" },
            new SelectListItem { Value = "5", Text = "Philhealth ID" },
            new SelectListItem { Value = "5", Text = "Authenticated Birth Certificate" },
            new SelectListItem { Value = "5", Text = "Alien Cert of Registration" },
            new SelectListItem { Value = "5", Text = "Senior Citizen" },
            new SelectListItem { Value = "5", Text = "Previous Copy of Clearance" }
                };
                }

                @Html.DropDownListFor(model => model.IdPresented,
            new SelectList(ValidIDOptions, "Value", "Text"),
            "-- Select Valid ID --",
            new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdPresented, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DateOfBirth, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                <label>@Html.RadioButtonFor(model => model.Gender, "Male") Male</label>
                <label>@Html.RadioButtonFor(model => model.Gender, "Female") Female</label>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.CivilStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label>@Html.RadioButtonFor(model => model.CivilStatus, "Single") Single</label><br />
                <label>@Html.RadioButtonFor(model => model.CivilStatus, "Married") Married</label><br />
                <label>@Html.RadioButtonFor(model => model.CivilStatus, "Widow/er") Widow/er</label><br />
                <label>@Html.RadioButtonFor(model => model.CivilStatus, "Legally Separated") Legally Separated</label><br />
                <label>@Html.RadioButtonFor(model => model.CivilStatus, "Annulled") Annulled</label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EducationalAttainment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    var HighestEducAttainOptions = new[]
                    {
            new SelectListItem { Value = "1", Text = "Elementary" },
            new SelectListItem { Value = "2", Text = "High School" },
            new SelectListItem { Value = "3", Text = "College" }
                
                };
                }

                @Html.DropDownListFor(model => model.EducationalAttainment,
            new SelectList(HighestEducAttainOptions, "Value", "Text"),
            "-- Select Education Attainment --",
            new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EducationalAttainment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LandlineNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LandlineNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LandlineNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Complexion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label>@Html.RadioButtonFor(model => model.Complexion, "Light") Light</label><br />
                <label>@Html.RadioButtonFor(model => model.Complexion, "Fair") Fair</label><br />
                <label>@Html.RadioButtonFor(model => model.Complexion, "Medium") Medium</label><br />
                <label>@Html.RadioButtonFor(model => model.Complexion, "Olive") Olive</label><br />
                <label>@Html.RadioButtonFor(model => model.Complexion, "Tan") Tan</label><br />
                <label>@Html.RadioButtonFor(model => model.Complexion, "Black") Black</label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Marks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Marks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Marks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Religion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Religion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Religion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SpouseName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SpouseName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SpouseName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FatherPlaceOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FatherPlaceOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FatherPlaceOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MotherName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MotherPlaceOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MotherPlaceOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MotherPlaceOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-primary" />
                <input type="submit" value="Delete" asp-action="Delete" class="btn btn-danger" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
